name: CICD for DS-TEST Chat Application
run-name: ${{ github.actor }} is running CICD for DS-TEST Chat Application


on:
  push:
    branches-ignore: [ stage, prod ]
  workflow_dispatch:    

# Define permissions for this workflow, which can be added at either the job or workflow level.      
permissions:
  id-token: write # This is required for requesting the JWT
  actions: read
  contents: read
  security-events: write


jobs:

  # Define the "get-aws-info" job, which uses a reusable workflow defined in another file. 
  get-aws-info:
    uses: ./.github/workflows/get-aws-info.yml

  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  unit-testing:
    runs-on: ubuntu-latest
    needs: pre-deploy
    name: Unit Testing
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  #SNYK-Comprehensive-Security-Testing is conducting a comprehensive set of security tests, including Snyk Code, Snyk Open Source, Snyk Infrastructure as Code, and Snyk Container tests         
  SNYK-Comprehensive-Security-Testing:
    needs: sca-tool-scan
    uses: ./.github/workflows/snyk-security.yml
    secrets: inherit

  sca-tool-scan:
    runs-on: ubuntu-latest
    needs: pre-deploy
    name: Snyk Open Source Security Scan
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  # To add for SAST
  # sast-tool-scan:

  # To add docker image scan
  # build-and-scan-image:
    
  deploy:
    runs-on: ubuntu-latest
    outputs:
      access_url_output: ${{ steps.tf-outputs.outputs.access_url }}
    needs: [ unit-testing, sca-tool-scan, SNYK-Comprehensive-Security-Testing, get-aws-info] # Update if other jobs are added
    name: Deploy to AWS
    env:
      environment: ${{ needs.get-aws-info.outputs.environment }}
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  zap-scan:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: deploy
    name: OWASP ZAP Full Scan
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  Merge-Dev-To-Prod:
    runs-on: ubuntu-latest
    needs: zap-scan
    name: Merge Dev to Prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Merge dev into prod
        run: |
          git checkout -b prod
          git merge dev --no-ff --no-edit
          git push origin prod
          working-directory: ./
